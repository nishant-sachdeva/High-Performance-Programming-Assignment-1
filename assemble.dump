
a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000000005a8 <_init>:
 5a8:	48 83 ec 08          	sub    $0x8,%rsp
 5ac:	48 8b 05 35 0a 20 00 	mov    0x200a35(%rip),%rax        # 200fe8 <__gmon_start__>
 5b3:	48 85 c0             	test   %rax,%rax
 5b6:	74 02                	je     5ba <_init+0x12>
 5b8:	ff d0                	callq  *%rax
 5ba:	48 83 c4 08          	add    $0x8,%rsp
 5be:	c3                   	retq   

Disassembly of section .plt:

00000000000005c0 <.plt>:
 5c0:	ff 35 ea 09 20 00    	pushq  0x2009ea(%rip)        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 5c6:	ff 25 ec 09 20 00    	jmpq   *0x2009ec(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 5cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005d0 <clock@plt>:
 5d0:	ff 25 ea 09 20 00    	jmpq   *0x2009ea(%rip)        # 200fc0 <clock@GLIBC_2.2.5>
 5d6:	68 00 00 00 00       	pushq  $0x0
 5db:	e9 e0 ff ff ff       	jmpq   5c0 <.plt>

00000000000005e0 <__stack_chk_fail@plt>:
 5e0:	ff 25 e2 09 20 00    	jmpq   *0x2009e2(%rip)        # 200fc8 <__stack_chk_fail@GLIBC_2.4>
 5e6:	68 01 00 00 00       	pushq  $0x1
 5eb:	e9 d0 ff ff ff       	jmpq   5c0 <.plt>

00000000000005f0 <__printf_chk@plt>:
 5f0:	ff 25 da 09 20 00    	jmpq   *0x2009da(%rip)        # 200fd0 <__printf_chk@GLIBC_2.3.4>
 5f6:	68 02 00 00 00       	pushq  $0x2
 5fb:	e9 c0 ff ff ff       	jmpq   5c0 <.plt>

Disassembly of section .plt.got:

0000000000000600 <__cxa_finalize@plt>:
 600:	ff 25 f2 09 20 00    	jmpq   *0x2009f2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 606:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000610 <_start>:
 610:	31 ed                	xor    %ebp,%ebp
 612:	49 89 d1             	mov    %rdx,%r9
 615:	5e                   	pop    %rsi
 616:	48 89 e2             	mov    %rsp,%rdx
 619:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 61d:	50                   	push   %rax
 61e:	54                   	push   %rsp
 61f:	4c 8d 05 fa 03 00 00 	lea    0x3fa(%rip),%r8        # a20 <__libc_csu_fini>
 626:	48 8d 0d 83 03 00 00 	lea    0x383(%rip),%rcx        # 9b0 <__libc_csu_init>
 62d:	48 8d 3d dd 02 00 00 	lea    0x2dd(%rip),%rdi        # 911 <main>
 634:	ff 15 a6 09 20 00    	callq  *0x2009a6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 63a:	f4                   	hlt    
 63b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000640 <deregister_tm_clones>:
 640:	48 8d 3d c9 09 20 00 	lea    0x2009c9(%rip),%rdi        # 201010 <__TMC_END__>
 647:	55                   	push   %rbp
 648:	48 8d 05 c1 09 20 00 	lea    0x2009c1(%rip),%rax        # 201010 <__TMC_END__>
 64f:	48 39 f8             	cmp    %rdi,%rax
 652:	48 89 e5             	mov    %rsp,%rbp
 655:	74 19                	je     670 <deregister_tm_clones+0x30>
 657:	48 8b 05 7a 09 20 00 	mov    0x20097a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 65e:	48 85 c0             	test   %rax,%rax
 661:	74 0d                	je     670 <deregister_tm_clones+0x30>
 663:	5d                   	pop    %rbp
 664:	ff e0                	jmpq   *%rax
 666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 66d:	00 00 00 
 670:	5d                   	pop    %rbp
 671:	c3                   	retq   
 672:	0f 1f 40 00          	nopl   0x0(%rax)
 676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 67d:	00 00 00 

0000000000000680 <register_tm_clones>:
 680:	48 8d 3d 89 09 20 00 	lea    0x200989(%rip),%rdi        # 201010 <__TMC_END__>
 687:	48 8d 35 82 09 20 00 	lea    0x200982(%rip),%rsi        # 201010 <__TMC_END__>
 68e:	55                   	push   %rbp
 68f:	48 29 fe             	sub    %rdi,%rsi
 692:	48 89 e5             	mov    %rsp,%rbp
 695:	48 c1 fe 03          	sar    $0x3,%rsi
 699:	48 89 f0             	mov    %rsi,%rax
 69c:	48 c1 e8 3f          	shr    $0x3f,%rax
 6a0:	48 01 c6             	add    %rax,%rsi
 6a3:	48 d1 fe             	sar    %rsi
 6a6:	74 18                	je     6c0 <register_tm_clones+0x40>
 6a8:	48 8b 05 41 09 20 00 	mov    0x200941(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 6af:	48 85 c0             	test   %rax,%rax
 6b2:	74 0c                	je     6c0 <register_tm_clones+0x40>
 6b4:	5d                   	pop    %rbp
 6b5:	ff e0                	jmpq   *%rax
 6b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6be:	00 00 
 6c0:	5d                   	pop    %rbp
 6c1:	c3                   	retq   
 6c2:	0f 1f 40 00          	nopl   0x0(%rax)
 6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6cd:	00 00 00 

00000000000006d0 <__do_global_dtors_aux>:
 6d0:	80 3d 39 09 20 00 00 	cmpb   $0x0,0x200939(%rip)        # 201010 <__TMC_END__>
 6d7:	75 2f                	jne    708 <__do_global_dtors_aux+0x38>
 6d9:	48 83 3d 17 09 20 00 	cmpq   $0x0,0x200917(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6e0:	00 
 6e1:	55                   	push   %rbp
 6e2:	48 89 e5             	mov    %rsp,%rbp
 6e5:	74 0c                	je     6f3 <__do_global_dtors_aux+0x23>
 6e7:	48 8b 3d 1a 09 20 00 	mov    0x20091a(%rip),%rdi        # 201008 <__dso_handle>
 6ee:	e8 0d ff ff ff       	callq  600 <__cxa_finalize@plt>
 6f3:	e8 48 ff ff ff       	callq  640 <deregister_tm_clones>
 6f8:	c6 05 11 09 20 00 01 	movb   $0x1,0x200911(%rip)        # 201010 <__TMC_END__>
 6ff:	5d                   	pop    %rbp
 700:	c3                   	retq   
 701:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 708:	f3 c3                	repz retq 
 70a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000710 <frame_dummy>:
 710:	55                   	push   %rbp
 711:	48 89 e5             	mov    %rsp,%rbp
 714:	5d                   	pop    %rbp
 715:	e9 66 ff ff ff       	jmpq   680 <register_tm_clones>

000000000000071a <merge>:
 71a:	55                   	push   %rbp
 71b:	48 89 e5             	mov    %rsp,%rbp
 71e:	41 56                	push   %r14
 720:	41 55                	push   %r13
 722:	41 54                	push   %r12
 724:	53                   	push   %rbx
 725:	48 83 ec 10          	sub    $0x10,%rsp
 729:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 730:	00 00 
 732:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 736:	31 c0                	xor    %eax,%eax
 738:	41 89 d4             	mov    %edx,%r12d
 73b:	41 29 f4             	sub    %esi,%r12d
 73e:	45 8d 54 24 01       	lea    0x1(%r12),%r10d
 743:	29 d1                	sub    %edx,%ecx
 745:	49 63 c2             	movslq %r10d,%rax
 748:	48 8d 04 85 12 00 00 	lea    0x12(,%rax,4),%rax
 74f:	00 
 750:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
 754:	48 29 c4             	sub    %rax,%rsp
 757:	49 89 e5             	mov    %rsp,%r13
 75a:	4d 89 e9             	mov    %r13,%r9
 75d:	48 63 c1             	movslq %ecx,%rax
 760:	48 8d 04 85 12 00 00 	lea    0x12(,%rax,4),%rax
 767:	00 
 768:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
 76c:	48 29 c4             	sub    %rax,%rsp
 76f:	48 89 e3             	mov    %rsp,%rbx
 772:	49 89 db             	mov    %rbx,%r11
 775:	45 85 d2             	test   %r10d,%r10d
 778:	0f 8e 14 01 00 00    	jle    892 <merge+0x178>
 77e:	45 89 e6             	mov    %r12d,%r14d
 781:	49 83 c6 01          	add    $0x1,%r14
 785:	b8 00 00 00 00       	mov    $0x0,%eax
 78a:	44 8d 04 06          	lea    (%rsi,%rax,1),%r8d
 78e:	4d 63 c0             	movslq %r8d,%r8
 791:	46 8b 04 87          	mov    (%rdi,%r8,4),%r8d
 795:	45 89 04 81          	mov    %r8d,(%r9,%rax,4)
 799:	48 83 c0 01          	add    $0x1,%rax
 79d:	4c 39 f0             	cmp    %r14,%rax
 7a0:	75 e8                	jne    78a <merge+0x70>
 7a2:	85 c9                	test   %ecx,%ecx
 7a4:	0f 8e dc 00 00 00    	jle    886 <merge+0x16c>
 7aa:	83 c2 01             	add    $0x1,%edx
 7ad:	48 89 d8             	mov    %rbx,%rax
 7b0:	44 8d 34 0a          	lea    (%rdx,%rcx,1),%r14d
 7b4:	4c 63 c2             	movslq %edx,%r8
 7b7:	46 8b 04 87          	mov    (%rdi,%r8,4),%r8d
 7bb:	44 89 00             	mov    %r8d,(%rax)
 7be:	83 c2 01             	add    $0x1,%edx
 7c1:	48 83 c0 04          	add    $0x4,%rax
 7c5:	44 39 f2             	cmp    %r14d,%edx
 7c8:	75 ea                	jne    7b4 <merge+0x9a>
 7ca:	45 85 d2             	test   %r10d,%r10d
 7cd:	0f 8e ac 00 00 00    	jle    87f <merge+0x165>
 7d3:	b8 00 00 00 00       	mov    $0x0,%eax
 7d8:	ba 00 00 00 00       	mov    $0x0,%edx
 7dd:	eb 16                	jmp    7f5 <merge+0xdb>
 7df:	4c 63 f6             	movslq %esi,%r14
 7e2:	46 89 04 b7          	mov    %r8d,(%rdi,%r14,4)
 7e6:	83 c2 01             	add    $0x1,%edx
 7e9:	83 c6 01             	add    $0x1,%esi
 7ec:	44 39 d0             	cmp    %r10d,%eax
 7ef:	7d 23                	jge    814 <merge+0xfa>
 7f1:	39 ca                	cmp    %ecx,%edx
 7f3:	7d 1f                	jge    814 <merge+0xfa>
 7f5:	4c 63 c0             	movslq %eax,%r8
 7f8:	47 8b 34 81          	mov    (%r9,%r8,4),%r14d
 7fc:	4c 63 c2             	movslq %edx,%r8
 7ff:	47 8b 04 83          	mov    (%r11,%r8,4),%r8d
 803:	45 39 c6             	cmp    %r8d,%r14d
 806:	7f d7                	jg     7df <merge+0xc5>
 808:	4c 63 c6             	movslq %esi,%r8
 80b:	46 89 34 87          	mov    %r14d,(%rdi,%r8,4)
 80f:	83 c0 01             	add    $0x1,%eax
 812:	eb d5                	jmp    7e9 <merge+0xcf>
 814:	44 39 d0             	cmp    %r10d,%eax
 817:	7d 26                	jge    83f <merge+0x125>
 819:	4c 63 c0             	movslq %eax,%r8
 81c:	4f 8d 44 85 00       	lea    0x0(%r13,%r8,4),%r8
 821:	45 8d 54 34 01       	lea    0x1(%r12,%rsi,1),%r10d
 826:	41 29 c2             	sub    %eax,%r10d
 829:	48 63 c6             	movslq %esi,%rax
 82c:	45 8b 08             	mov    (%r8),%r9d
 82f:	44 89 0c 87          	mov    %r9d,(%rdi,%rax,4)
 833:	83 c6 01             	add    $0x1,%esi
 836:	49 83 c0 04          	add    $0x4,%r8
 83a:	44 39 d6             	cmp    %r10d,%esi
 83d:	75 ea                	jne    829 <merge+0x10f>
 83f:	39 d1                	cmp    %edx,%ecx
 841:	7e 20                	jle    863 <merge+0x149>
 843:	48 63 c2             	movslq %edx,%rax
 846:	48 8d 04 83          	lea    (%rbx,%rax,4),%rax
 84a:	29 d1                	sub    %edx,%ecx
 84c:	01 f1                	add    %esi,%ecx
 84e:	48 63 d6             	movslq %esi,%rdx
 851:	44 8b 00             	mov    (%rax),%r8d
 854:	44 89 04 97          	mov    %r8d,(%rdi,%rdx,4)
 858:	83 c6 01             	add    $0x1,%esi
 85b:	48 83 c0 04          	add    $0x4,%rax
 85f:	39 f1                	cmp    %esi,%ecx
 861:	75 eb                	jne    84e <merge+0x134>
 863:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 867:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 86e:	00 00 
 870:	75 2f                	jne    8a1 <merge+0x187>
 872:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
 876:	5b                   	pop    %rbx
 877:	41 5c                	pop    %r12
 879:	41 5d                	pop    %r13
 87b:	41 5e                	pop    %r14
 87d:	5d                   	pop    %rbp
 87e:	c3                   	retq   
 87f:	ba 00 00 00 00       	mov    $0x0,%edx
 884:	eb b9                	jmp    83f <merge+0x125>
 886:	b8 00 00 00 00       	mov    $0x0,%eax
 88b:	ba 00 00 00 00       	mov    $0x0,%edx
 890:	eb 87                	jmp    819 <merge+0xff>
 892:	85 c9                	test   %ecx,%ecx
 894:	0f 8f 10 ff ff ff    	jg     7aa <merge+0x90>
 89a:	ba 00 00 00 00       	mov    $0x0,%edx
 89f:	eb 9e                	jmp    83f <merge+0x125>
 8a1:	e8 3a fd ff ff       	callq  5e0 <__stack_chk_fail@plt>

00000000000008a6 <merge_sort>:
 8a6:	39 d6                	cmp    %edx,%esi
 8a8:	7c 02                	jl     8ac <merge_sort+0x6>
 8aa:	f3 c3                	repz retq 
 8ac:	41 55                	push   %r13
 8ae:	41 54                	push   %r12
 8b0:	55                   	push   %rbp
 8b1:	53                   	push   %rbx
 8b2:	48 83 ec 08          	sub    $0x8,%rsp
 8b6:	89 d5                	mov    %edx,%ebp
 8b8:	89 f3                	mov    %esi,%ebx
 8ba:	49 89 fc             	mov    %rdi,%r12
 8bd:	89 d0                	mov    %edx,%eax
 8bf:	29 f0                	sub    %esi,%eax
 8c1:	41 89 c5             	mov    %eax,%r13d
 8c4:	41 c1 ed 1f          	shr    $0x1f,%r13d
 8c8:	41 01 c5             	add    %eax,%r13d
 8cb:	41 d1 fd             	sar    %r13d
 8ce:	41 01 f5             	add    %esi,%r13d
 8d1:	44 89 ea             	mov    %r13d,%edx
 8d4:	e8 cd ff ff ff       	callq  8a6 <merge_sort>
 8d9:	41 8d 75 01          	lea    0x1(%r13),%esi
 8dd:	89 ea                	mov    %ebp,%edx
 8df:	4c 89 e7             	mov    %r12,%rdi
 8e2:	e8 bf ff ff ff       	callq  8a6 <merge_sort>
 8e7:	49 63 c5             	movslq %r13d,%rax
 8ea:	41 8b 4c 84 04       	mov    0x4(%r12,%rax,4),%ecx
 8ef:	41 39 0c 84          	cmp    %ecx,(%r12,%rax,4)
 8f3:	7f 0b                	jg     900 <merge_sort+0x5a>
 8f5:	48 83 c4 08          	add    $0x8,%rsp
 8f9:	5b                   	pop    %rbx
 8fa:	5d                   	pop    %rbp
 8fb:	41 5c                	pop    %r12
 8fd:	41 5d                	pop    %r13
 8ff:	c3                   	retq   
 900:	89 e9                	mov    %ebp,%ecx
 902:	44 89 ea             	mov    %r13d,%edx
 905:	89 de                	mov    %ebx,%esi
 907:	4c 89 e7             	mov    %r12,%rdi
 90a:	e8 0b fe ff ff       	callq  71a <merge>
 90f:	eb e4                	jmp    8f5 <merge_sort+0x4f>

0000000000000911 <main>:
 911:	53                   	push   %rbx
 912:	48 81 ec 10 09 3d 00 	sub    $0x3d0910,%rsp
 919:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 920:	00 00 
 922:	48 89 84 24 08 09 3d 	mov    %rax,0x3d0908(%rsp)
 929:	00 
 92a:	31 c0                	xor    %eax,%eax
 92c:	48 89 e2             	mov    %rsp,%rdx
 92f:	b8 40 42 0f 00       	mov    $0xf4240,%eax
 934:	89 02                	mov    %eax,(%rdx)
 936:	48 83 c2 04          	add    $0x4,%rdx
 93a:	83 e8 01             	sub    $0x1,%eax
 93d:	75 f5                	jne    934 <main+0x23>
 93f:	e8 8c fc ff ff       	callq  5d0 <clock@plt>
 944:	48 89 c3             	mov    %rax,%rbx
 947:	48 89 e7             	mov    %rsp,%rdi
 94a:	ba 3f 42 0f 00       	mov    $0xf423f,%edx
 94f:	be 00 00 00 00       	mov    $0x0,%esi
 954:	e8 4d ff ff ff       	callq  8a6 <merge_sort>
 959:	e8 72 fc ff ff       	callq  5d0 <clock@plt>
 95e:	48 29 d8             	sub    %rbx,%rax
 961:	66 0f ef c0          	pxor   %xmm0,%xmm0
 965:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
 96a:	f2 0f 5e 05 e6 00 00 	divsd  0xe6(%rip),%xmm0        # a58 <_IO_stdin_used+0x28>
 971:	00 
 972:	48 8d 35 bb 00 00 00 	lea    0xbb(%rip),%rsi        # a34 <_IO_stdin_used+0x4>
 979:	bf 01 00 00 00       	mov    $0x1,%edi
 97e:	b8 01 00 00 00       	mov    $0x1,%eax
 983:	e8 68 fc ff ff       	callq  5f0 <__printf_chk@plt>
 988:	b8 00 00 00 00       	mov    $0x0,%eax
 98d:	48 8b 8c 24 08 09 3d 	mov    0x3d0908(%rsp),%rcx
 994:	00 
 995:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 99c:	00 00 
 99e:	75 09                	jne    9a9 <main+0x98>
 9a0:	48 81 c4 10 09 3d 00 	add    $0x3d0910,%rsp
 9a7:	5b                   	pop    %rbx
 9a8:	c3                   	retq   
 9a9:	e8 32 fc ff ff       	callq  5e0 <__stack_chk_fail@plt>
 9ae:	66 90                	xchg   %ax,%ax

00000000000009b0 <__libc_csu_init>:
 9b0:	41 57                	push   %r15
 9b2:	41 56                	push   %r14
 9b4:	49 89 d7             	mov    %rdx,%r15
 9b7:	41 55                	push   %r13
 9b9:	41 54                	push   %r12
 9bb:	4c 8d 25 e6 03 20 00 	lea    0x2003e6(%rip),%r12        # 200da8 <__frame_dummy_init_array_entry>
 9c2:	55                   	push   %rbp
 9c3:	48 8d 2d e6 03 20 00 	lea    0x2003e6(%rip),%rbp        # 200db0 <__init_array_end>
 9ca:	53                   	push   %rbx
 9cb:	41 89 fd             	mov    %edi,%r13d
 9ce:	49 89 f6             	mov    %rsi,%r14
 9d1:	4c 29 e5             	sub    %r12,%rbp
 9d4:	48 83 ec 08          	sub    $0x8,%rsp
 9d8:	48 c1 fd 03          	sar    $0x3,%rbp
 9dc:	e8 c7 fb ff ff       	callq  5a8 <_init>
 9e1:	48 85 ed             	test   %rbp,%rbp
 9e4:	74 20                	je     a06 <__libc_csu_init+0x56>
 9e6:	31 db                	xor    %ebx,%ebx
 9e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 9ef:	00 
 9f0:	4c 89 fa             	mov    %r15,%rdx
 9f3:	4c 89 f6             	mov    %r14,%rsi
 9f6:	44 89 ef             	mov    %r13d,%edi
 9f9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 9fd:	48 83 c3 01          	add    $0x1,%rbx
 a01:	48 39 dd             	cmp    %rbx,%rbp
 a04:	75 ea                	jne    9f0 <__libc_csu_init+0x40>
 a06:	48 83 c4 08          	add    $0x8,%rsp
 a0a:	5b                   	pop    %rbx
 a0b:	5d                   	pop    %rbp
 a0c:	41 5c                	pop    %r12
 a0e:	41 5d                	pop    %r13
 a10:	41 5e                	pop    %r14
 a12:	41 5f                	pop    %r15
 a14:	c3                   	retq   
 a15:	90                   	nop
 a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 a1d:	00 00 00 

0000000000000a20 <__libc_csu_fini>:
 a20:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000a24 <_fini>:
 a24:	48 83 ec 08          	sub    $0x8,%rsp
 a28:	48 83 c4 08          	add    $0x8,%rsp
 a2c:	c3                   	retq   
